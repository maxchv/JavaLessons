Видео:
	Map	https://youtu.be/5aMJdafEjJk
	Set	
---------
Задание 1
---------

1. Создайте проект MapLab с классом MapSetTester и методом main. Вы будете использовать классы HashMap и TreeSet
2. В методе main создайте словарь HashMap с именем networkMap, в котором будут храниться данные в виде пары ключ и
   значение, где ключ - имя телеканала, а связанное значение - это множество типа TreeSet, который содержит телевизионные
   шоу для этого телеканала:

   HashMap <______, ______> networkMap = new HashMap <______, ______> ();

3. В цикле запросите у пользователя название телешоу, а затем запросите пользователя ввести имя телевизионного канала
   для этого шоу. После того, как у вас появяться исходные данные, найдите канал в словаре networkMap.

   Если канал еще не добавлен в словарь, создайте множество TreeSet в которое добавть название телешоу, а затем добавьте
   ключ к паре значений (канал, с заданным телевизионным шоу) в словарь.

   Если канал находится в словаре, добавьте телешоу к множеству TreeSet этого телеканала.

   Таким образом введите не менее 10 телевизионных шоу.
   После обновления словаря выведите его содержимое.

   Пример вывода (обратите внимание, что сети не расположены в лексикографическом порядке, но телевизионные
   шоу для каждого канала - в лексикографическом порядке ... почему?):

   Input tv network: FOX
   Input tv show on FOX: The Simpsons
   {FOX=[The Simpsons]}

   Input tv network: NBC
   Input tv show on NBC: ER
   {FOX=[The Simpsons], NBC=[ER]}

   Input tv network: ABC
   Input tv show on ABC: 20/20
   {FOX=[The Simpsons], NBC=[ER], ABC=[20/20]}

   Input tv network: CBS
   Input tv show on CBS: Survivor
   {CBS=[Survivor], FOX=[The Simpsons], NBC=[ER], ABC=[20/20]}

   Input tv network: ABC
   Input tv show on ABC: Lost
   {CBS=[Survivor], FOX=[The Simpsons], NBC=[ER], ABC=[20/20, Lost]}

   Input tv network: FOX
   Input tv show on FOX: Family Guy
   {CBS=[Survivor], FOX=[Family Guy, The Simpsons], NBC=[ER], ABC=[20/20, Lost]}

   Input tv network: CBS
   Input tv show on CBS: CSI
   {CBS=[CSI, Survivor], FOX=[Family Guy, The Simpsons], NBC=[ER], ABC=[20/20, Lost]}

   Input tv network: FOX
   Input tv show on FOX: American Idol
   {CBS=[CSI, Survivor], FOX=[American Idol, Family Guy, The Simpsons], NBC=[ER], ABC=[20/20, Lost]}

   Input tv network: ABC
   Input tv show on ABC: Desperate Housewives
   {CBS=[CSI, Survivor], FOX=[American Idol, Family Guy, The Simpsons], NBC=[ER], ABC=[20/20, Desperate Housewives, Lost]}

   Input tv network: NBC
   Input tv show on NBC: Law And Order
   {CBS=[CSI, Survivor], FOX=[American Idol, Family Guy, The Simpsons], NBC=[ER, Law And Order], ABC=[20/20, Desperate Housewives, Lost]}

4. Если у вас есть словарь с кналами, выведите содержимое словаря алфавитном порядке каналов, по одному кналу в каждой
   строке.
   Создайте массив содержащий ключи (названия каналов) словаря networkMap.
   Отсортируйте полученный массив каналов по алфавиту.
   Переберите элементы массива ключей, что бы получить соответствующее значение (наборы ТВ-шоу) для каждого
   ключа из словаря и распечатать их.
   (Примечание: Вам не придется сортировать ТВ-шоу для канала, так как они уже будут отсортированы ... почему?)

---------
Задание 2
---------

Нужно реализовать рассадку пассажирова по рейсам. Каждый пассажир должен сесть на свой рейс. Самолет может иметь или не иметь 
пассажирова. Программа должна позволять запрашивать у пользователя ввод пассажиров, для каждого пассажира вводится: 
	- имя; 
	- номер документа, удовлетворяющего личность; 
	- номер рейса; 

По окончанию ввода пассажиров в консоль выводится список всех рейсов и отправляющихся на нем пассажиров (имя и номер документа). 
Рейсы должны быть упорядочены по номеру, пассажиры - по имени. Для каждого рейса указывается количество пассажиров на нем. 
Ввод данных производится по пассажирам. При решении задачи нужно использовать интерфейсы List (для хранения пассажировов в рейсе) и 
Map (для сопоставления имени рейса и пассажиров в рейсе). Предположим, что вы реализовали класс Passenger, 
тогда объявления списка пассажиров следует делать следующим образом:

List<Passenger> passengers = new ArrayList<Passenger>();

Для ввода данных имеет смысл испльзовать класс Scanner следующим образом:

Scanner scanner = new Scanner(System.in); int flightNumber = scanner.nextInt(); 

При решение задачи должны быть использована одна (и только одна) TreeMap. Класс Passenger должен содержать только private-поля и 
методы доступа к нему (set/get). Используйте generics при объявление переменных с коллекциями: 

Map<Integer,List<Passenger>> passengers = new TreeMap<Integer,List<Passenger>> 

Для перебора элементов в коллекциях используйте for-each вариант for: 

Collection<Passenger> = new ArrayList<Passenger>(); for (Passenger passenger : passengers) { }