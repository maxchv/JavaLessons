<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/mvc"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:p="http://www.springframework.org/schema/p"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.3.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.3.xsd">

	<!-- DispatcherServlet Context: defines this servlet's request-processing 
		infrastructure -->

	<!-- Enables the Spring MVC @Controller programming model -->
	<annotation-driven />

	<!-- Handles HTTP GET requests for /resources/** by efficiently serving 
		up static resources in the ${webappRoot}/resources directory -->
	<resources mapping="/resources/**" location="/resources/" />

	<!-- Resolves views selected for rendering by @Controllers to .jsp resources 
		in the /WEB-INF/views directory -->
	<beans:bean
		class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<beans:property name="prefix" value="/WEB-INF/views/" />
		<beans:property name="suffix" value=".jsp" />
	</beans:bean>

	<context:component-scan base-package="org.example" />

	<!-- Add JPA support -->
	<beans:bean id="emf"
		class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean">
			<beans:property name="dataSource" ref="dataSource"></beans:property>
			<beans:property name="packagesToScan" value="org.example"></beans:property>
			<beans:property name="jpaVendorAdapter">
				<beans:bean class="org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter" />
			</beans:property>
			<beans:property name="jpaProperties">
				<beans:props>
					<beans:prop key="hibernate.hbm2ddl.auto">create-drop</beans:prop>
					<beans:prop key="hibernate.dialect">org.hibernate.dialect.MySQL5Dialect</beans:prop>
					<beans:prop key="hibernate.show_sql">true</beans:prop>
					<beans:prop key="hibernate.format_sql">true</beans:prop>
				</beans:props>
			</beans:property>
	</beans:bean>
	
	<beans:bean id="dataSource" class="org.springframework.jdbc.datasource.DriverManagerDataSource">
		<beans:property name="driverClassName" value="com.mysql.jdbc.Driver" />
		<beans:property name="url" value="jdbc:mysql://localhost:3306/db" />
		<beans:property name="username" value="root" />
		<beans:property name="password" value="12345" />
	</beans:bean>

	<!-- Add Transaction support -->
	<beans:bean id="myTxManager" class="org.springframework.orm.jpa.JpaTransactionManager" primary="false">
		<beans:property name="entityManagerFactory" ref="emf" />
	</beans:bean>

	<!-- Use @Transaction annotations for managing transactions -->
	<tx:annotation-driven transaction-manager="myTxManager" />

</beans:beans>
