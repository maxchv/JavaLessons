Назовите принципы ООП и расскажите о каждом.
Дайте определение понятию «класс».
Что такое поле/атрибут класса?
Как правильно организовать доступ к полям класса?
Дайте определение понятию «конструктор».
Чем отличаются конструкторы по-умолчанию, копирования и конструктор с параметрами?
Какие модификации уровня доступа вы знаете, расскажите про каждый из них.
Расскажите об особенностях класса с единственным закрытым (private) конструктором.
О чем говорят ключевые слова «this», «super», где и как их можно использовать?
Дайте определение понятию «метод».
Что такое сигнатура метода?
Какие методы называются перегруженными?
Могут ли нестатические методы перегрузить статические?
Расскажите о переопределение методов.
Может ли метод принимать разное количество параметров (аргументы переменной длины)?
Можно ли сузить уровень доступа/тип возвращаемого значения при переопределении метода?
Как получить доступ к переопределенным методам родительского класса?
Какие преобразования называются нисходящими и восходящими?
Чем отличается переопределение от перегрузки?
Где можно инициилизировать статические/нестатические поля?
Зачем нужен оператор instanceof?
Зачем нужны и какие бывают блоки инициализации?
Каков порядок вызова конструкторов и блоков инициализации двух классов: потомка и его предка?
Где и для чего используется модификатор abstract?
Можно ли объявить метод абстрактым и статическим одновременно?
Что означает ключевое поле static?
К каким конструкциям Java применим модификатор static?
Что будет, если в static блоке кода возникнет исключительная ситуация?
Можно ли перегрузить static метод?
Что такое статический класс, какие особенности его использования?
Какие особенности инициализации final static переменных?
Как влияет модификатор static на класс/метод/поле?
О чем говорит ключевое слово final?
Дайте определение понятию «интерфейс».
Какие модификаторы по умолчанию имеют поля и методы интерфейсов?
Почему нельзя объявить метод интерфейса с модификатором final или static?
Какие типы классов бывают в java (вложенные… и.т.д.)
Что вы знаете о вложенных классах, зачем они используются? Классификация, варианты использования, о нарушении инкапсуляции.
Каким образом из вложенного класса получить досуп к полю внешнего класса?
Какие особенности создания вложенных классов: простых и статических.
В чем разница вложенных и внутренних классов?
Какие классы называются анонимными?
Каким образом можно обратиться к локальной переменной метода из анонимного класса, объявленного в теле этого метода? Есть ли каке-нибудь ограничения для такой переменной?
Как связан любой пользовательский класс с классом Object?
Расскажите про каждый из методов класса Object.
Что такое метод equals(). Чем он отличается от операции ==.
Если вы хотите переопределить equals(), какие условия должны удовлетворяться для переопределенного метода?
Если equals() переопределен, есть ли какие-либо другие методы, которые следует переопределить?
В чем особенность работы методов hashCode и equals? Каким образом реализованы методы hashCode и equals в классе Object? Какие правила и соглашения существуют для реализации этих методов? Когда они применяются?
Какой метод возвращает строковое представление объекта?
Что будет, если переопределить equals не переопределяя hashCode? Какие могут возникнуть проблемы?
Есть ли какие-либо рекомендации о том, какие поля следует использовать при подсчете hashCode?
Как вы думаете, будут ли какие-то проблемы, если у объекта, который используется в качестве ключа в hashMap изменится поле, которое участвует в определении hashCode?
Чем отличается абстрактый класс о интерфейса, в каких случаях что вы будете использовать?
Можно ли получить доступ к private переменным классам и если да, то каким образом?
Модификаторы. Назначение и варианты использования.
Что такое volatile и transient? Для чего и в каких случаях можно было бы использовать default?
Контексты использования модификаторов (класс/поле/метод)
Какой из модификаторов более строгий: protected или package-private?
Расширение модификаторов при наследовании, переопределение и сокрытие методов. Если у класса-родителя есть метод, объявленный как private, может ли наследник расширить его видимость? А если protected? А сузить видимость?
Модификатор abstract и final для классов/методов
Имеет ли смысл объявлять метод private final?
Какие особенности инициализации final переменных?
Что будет, если единственный конструктор класса объявлен как final?
Расширение/сужение типов в аргументах переопределяемых методов в случае, если бы в Java список формальных параметров не входил бы в сигнатуру метода.
Что такое finalize? Зачем он нужен? Что Вы можете рассказать о сборщике мусора и алгоритмах его работы.
Почему метод clone объявлен как protected? Что необходимо для реализации клонирования?
Знакомы ли Вам какие-либо паттерны проектирования?
Напишите Singleton… А с ленивой загрузкой. А если он должен быть потоко-безопасным? А в каких случаях ленивая загрузка хуже?
Что можете сказать про MVC? Нарисуйте диаграмму и объясните, как MVC работает.
Напишите функцию вычисления факториала.
Дана функция вычисления чисел Фибоначчи, известно, что она работает. Найдите логическую ошибку. Оцените сложность получившегося алгоритма.