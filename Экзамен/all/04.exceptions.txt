Дайте определение понятию «исключение»
Какова иерархия исключений.
Можно/нужно ли обрабатывать ошибки jvm?
Какие существуют способы обработки исключений?
О чем говорит ключевое слово throws?
В чем особенность блока finally? Всегда ли он исполняется?
Может ли не быть ни одного блока catch при отлавливании исключений?
Могли бы вы придумать ситуацию, когда блок finally не будет выполнен?
Может ли один блок catch отлавливать несколько исключений (с одной и разных веток наследований)?
Что вы знаете об обрабатываемых и не обрабатываемых (catched/uncatched) исключениях?
В чем особенность RuntimeException?
Как написать собственное («пользовательское») исключение? Какими мотивами вы будете руководствоваться при выборе типа исключения: checked/unchecked?
Какой оператор позволяет принудительно выбросить исключение?
Есть ли дополнительные условия к методу, который потенциально может выбросить исключение?
Может ли метод main выбровить исключение во вне и если да, то где будет происходить обработка данного исключения?
Если оператор return содержится и в блоке catch и в finally, какой из них «главнее»?
OutOfMemoryError
SQLException и поинтересоваться, оно chekced или unchecked и нормально ли это по мнению кандидата.
Что такое Error? В каком случае используется Error. Приведите пример Error’а.
Какая конструкция используется в Java для обработки исключений?
Возможно ли использование блока try-finally (без catch)?
Предположим, есть блок try-finally. В блоке try возникло исключение и выполнение переместилось в блок finally. В блоке finally тоже возникло исключение. Какое из двух исключений “выпадет” из блока try-finally? Что случится со вторым исключением?
Предположим, есть метод, который может выбросить IOException и FileNotFoundException в какой оследовательности должны идти блоки catch? Сколько блоков catch будет выполнено?