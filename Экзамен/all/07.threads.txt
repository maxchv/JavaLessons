Дайте определение понятию «процесс».
Дайте определение понятию «поток».
Дайте определение понятию «синхронизация потоков».
Как взаимодействуют программы, процессы и потоки?
В каких случаях целесообразно создавать несколько потоков?
Что может произойти если два потока будут выполнять один и тот же код в программе?
Что вы знаете о главном потоке программы?
Какие есть способы создания и запуска потоков?
Какой метод запускает поток на выполнение?
Какой метод описывает действие потока во время выполнения?
Когда поток завершает свое выполнение?
Как синхронизировать метод?
Как принудительно остановить поток?
Дайте определение понятию «поток-демон».
Как создать поток-демон?
Как получить текущий поток?
Дайте определение понятию «монитор».
Как приостановить выполнение потока?
В каких состояниях может прибыватьпоток?
Что является монитором при вызове нестатического и статического метода?
Что является монитором при выполнении участка кода метода?
Какие методы позволяют синхронизировать выполнение потоков?
Какой метод переводит поток в режим ожидания?
Какова функциональность методов notify и notifyAll?
Что позволяет сделать метод join?
Каковы условия вызова метода wait/notify?
Дайте определение понятию «взаимная блокировка».
Чем отличаются методы interrupt, interrupted, isInterrupted?
В каком случае будет выброшено исключение InterruptedException, какие методы могут его выбросить?
Модификаторы synchronized и volatile
Пакет java.util.concurrent
Какие вы знаете способы запустить некоторое действие в отдельном потоке?
Какие вы знаете способы прекратить выполнение потока?
Какие ключевые слова Java, связанные с многопоточностью Вы знаете?
Есть некоторый метод, который исполняет операцию i++. Переменная i типа int. Предполагается, что код будет исполнятся в многопоточной среде. Следует ли синхронизировать блок?
Что служит в качестве mutex, если метод объявлен synchronized?
Можно ли вызвать в разных потоках два synchronized метода одного и того же объекта?
Что используется в качестве mutex, если метод объявлен static synchronized? Можно ли создавать новые кземпляры класса, пока выполняется static synchronized метод?
Объясните, что такое deadlock? Приведите пример кода, который демонстрирует deadlock.
Какие особенности использования метода wait? При каких условиях поток может выйти из режима ожидания?
Предположим в методе run возник RuntimeException, который не был пойман. Что случится с потоком? Есть ли способ узнать о том, что Exception произошел (не заключая все тело run в блок try-catch)? Есть ли способ восстановить работу потока после того как это произошло?
Какие стандартные инструменты Java вы бы использовали для реализации пула потоков?